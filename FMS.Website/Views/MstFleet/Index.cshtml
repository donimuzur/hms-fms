@model FMS.Website.Models.FleetModel
@using FMS.Core;

<div class="opt-content clearfloat">
    <h5 class="title-page">Master Data Fleet</h5>
    @if (Model.CurrentPageAccess.UploadAccess == true)
    {
        <a href="@Url.Action("Upload", "MstFleet")" class="btn btn-primary line" title="Upload & View">
            <i class="fa fa-upload"></i> Import
        </a>
    }
    <a href="#!" class="btn btn-primary line" id="btnExport" title="Export To Excel" onclick="ExportXls()">
        <i class="fa fa-upload"></i> Export
    </a>
</div>
<section class="content">
    @using (Html.BeginForm("ExportMasterFleet", "MstFleet", FormMethod.Post, new { @id = "ExportToXls" }))
    {
    }
    <div class="wpanel">
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="SearchView_CityList">Police Number</label>
                    @Html.DropDownListFor(model => model.SearchView.PoliceNumber, Model.SearchView.PoliceNumberList, "select", new { @class = "form-control chosen", @data_live_search = true })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="SearchView_CityList">Employee Name</label>
                    @Html.DropDownListFor(model => model.SearchView.EmployeeName, Model.SearchView.EmployeeNameList, "select", new { @class = "form-control chosen", @data_live_search = true })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="SearchView_CityList">Engine Number</label>
                    @Html.DropDownListFor(model => model.SearchView.EngineNumber, Model.SearchView.EngineNumberList, "select", new { @class = "form-control chosen", @data_live_search = true })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="SearchView_CityList">Employee ID</label>
                    @Html.DropDownListFor(model => model.SearchView.EmployeeID, Model.SearchView.EmployeeIDList, "select", new { @class = "form-control chosen", @data_live_search = true })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="SearchView_CityList">Chasis Number</label>
                    @Html.DropDownListFor(model => model.SearchView.ChasisNumber, Model.SearchView.ChasisNumberList, "select", new { @class = "form-control chosen", @data_live_search = true })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="SearchView_Status">Status</label>
                    @Html.DropDownListFor(model => model.SearchView.StatusSource, Model.SearchView.StatusList, "select", new { @class = "form-control chosen", @data_live_search = true })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="SearchView_SupplyMethodList">Supply Method</label>
                    @Html.DropDownListFor(model => model.SearchView.SupplyMethod, Model.SearchView.SupplyMethodList, "select", new { @class = "form-control chosen", @data_live_search = true })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="SearchView_BodyTypeList">Body Type</label>
                    @Html.DropDownListFor(model => model.SearchView.BodyType, Model.SearchView.BodyTypeList, "select", new { @class = "form-control chosen", @data_live_search = true })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="SearchView_VehicleTypeList">Vehicle Type</label>
                    @Html.DropDownListFor(model => model.SearchView.VehicleType, Model.SearchView.VehicleTypeList, "select", new { @class = "form-control chosen", @data_live_search = true })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="SearchView_VehicleUsageList">Vehicle Usage</label>
                    @Html.DropDownListFor(model => model.SearchView.VehicleUsage, Model.SearchView.VehicleUsageList, "select", new { @class = "form-control chosen", @data_live_search = true })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="SearchView_VendorList">Vendor Name</label>
                    @Html.DropDownListFor(model => model.SearchView.Vendor, Model.SearchView.VendorList, "select", new { @class = "form-control chosen", @data_live_search = true })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="SearchView_FunctionList">Function</label>
                    @Html.DropDownListFor(model => model.SearchView.Function, Model.SearchView.FunctionList, "select", new { @class = "form-control chosen", @data_live_search = true })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="SearchView_RegionalList">Regional</label>
                    @Html.DropDownListFor(model => model.SearchView.Regional, Model.SearchView.RegionalList, "select", new { @class = "form-control chosen", @data_live_search = true })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="SearchView_CityList">City</label>
                    @Html.DropDownListFor(model => model.SearchView.City, Model.SearchView.CityList, "select", new { @class = "form-control chosen", @data_live_search = true })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="SearchView_StartRent">Start Rent From</label>
                    @Html.TextBoxFor(model => model.SearchView.StartRent, new { @class = "form-control date-begin" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="SearchView_StartRent">Start Rent To</label>
                    @Html.TextBoxFor(model => model.SearchView.StartRentTo, new { @class = "form-control date-begin" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="SearchView_EndRent">End Rent From</label>
                    @Html.TextBoxFor(model => model.SearchView.EndRent, new { @class = "form-control date-end" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="SearchView_EndRent">End Rent To</label>
                    @Html.TextBoxFor(model => model.SearchView.EndRentTo, new { @class = "form-control date-end" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="SearchView_EndRent">End Date From</label>
                    @Html.TextBoxFor(model => model.SearchView.EndDate, new { @class = "form-control date-end" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="SearchView_EndRent">End Date To</label>
                    @Html.TextBoxFor(model => model.SearchView.EndDateTo, new { @class = "form-control date-end" })
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="col-md-12">
                <button id="btn-filter" type="button" class="btn btn-primary">Filter</button>
                <button id="btn-reset" type="button" class="btn btn-default">Reset</button>
            </div>
        </div>
    </div>
    <div class="wpanel">
        @Html.Partial("_FleetList")
    </div>
</section>

<div class="loading"></div>

<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script type="text/javascript" language="javascript" class="init">
    jQuery(function ($) {
        // DataTable
        /*var table = $('#tbFleet').DataTable({
            "dom": 'lf<"table-overflow"t>pi',
            orderCellsTop: true
        });

        // Apply the search
        table.columns().eq(0).each(function (colIdx) {
            $('input', $('.filters th')[colIdx]).on('keyup change', function () {
                table
                    .column(colIdx)
                    .search(this.value)
                    .draw();
            });
        });*/

        $(".chosen").chosen();

        setupDataTables();

        $(document).on('click', '#btn-filter', function () {
            var table = $('#tbFleet').DataTable();

            table.ajax.reload();
        });

        $(document).on('click', '#btn-reset', function () {
            $('input[type=text]').val('');
            $('.chosen-single > span').html('select');
            setupDataTables();
        });
    });

    function ExportXls() {
        $('#ExportToXls').submit();
    }

    function setupColumns() {
        var columns = [
            { "data": null, "orderable" : false },
            { "data": "PoliceNumber", "orderable": false },
            { "data": "EmployeeName", "orderable": false },
            { "data": "EmployeeID", "orderable": false },
            { "data": "CostCenter", "orderable": false },
            { "data": "Manufacturer", "orderable": false },
            { "data": "Models", "orderable": false },
            { "data": "Series", "orderable": false },
            { "data": "Transmission", "orderable": false },
            { "data": "BodyType", "orderable": false },
            { "data": "FuelType", "orderable": false },
            { "data": "Branding", "orderable": false },
            { "data": "Color", "orderable": false },
            {
                "data": "Airbag", "orderable": false, "render": function (datum, type, record) {
                    return (datum) ? "Yes" : "No";
                }
            },
            { "data": "ChasisNumber", "orderable": false },
            { "data": "EngineNumber", "orderable": false },
            { "data": "VehicleYear", "orderable": false },
            { "data": "VehicleType", "orderable": true },
            { "data": "VehicleUsage", "orderable": true },
            {
                "data": "Project", "orderable": false, "render": function (datum, type, record) {
                    return (datum) ? "Yes" : "No";
                }
            },
            { "data": "ProjectName", "orderable": false },
            {
                "data": "StartContract", "orderable": true, "render": function (datum, type, record) {
                    return (datum) ? moment(datum).format("DD-MMM-YYYY") : "";
                }
            },
            {
                "data": "EndContract", "orderable": true, "render": function (datum, type, record) {
                    return (datum) ? moment(datum).format("DD-MMM-YYYY") : "";
                }
            },
            { "data": "VendorName", "orderable": true },
            { "data": "City", "orderable": true },
            { "data": "SupplyMethod", "orderable": true },
            {
                "data": "Restitution", "orderable": false, "render": function (datum, type, record) {
                    return (datum) ? "Yes" : "No";
                }
            },
            { "data": "MonthlyHMSInstallment", "orderable": false },
            { "data": "VatDecimal", "orderable": false },
            { "data": "PoNumber", "orderable": false },
            { "data": "PoLine", "orderable": false },
            { "data": "CarGroupLevel", "orderable": false },
            { "data": "GroupLevel", "orderable": false },
            { "data": "AssignedTo", "orderable": false },
            { "data": "Address", "orderable": false },
            {
                "data": "StartDate", "orderable": false, "render": function (datum, type, record) {
                    return (datum) ? moment(datum).format("DD-MMM-YYYY") : "";
                }
            },
            {
                "data": "EndDate", "orderable": false, "render": function (datum, type, record) {
                    return (datum) ? moment(datum).format("DD-MMM-YYYY") : "";
                }
            },
            {
                "data": "IsActive", "orderable": false, "render": function (datum, type, record) {
                    return (datum) ? "Active" : "InActive";
                }
            },
            { "data": "CertificateOwnership", "orderable": false },
            { "data": "Comments", "orderable": false },
            { "data": "Assets", "orderable": false },
            { "data": "TotalMonthlyCharge", "orderable": false },
            { "data": "Function", "orderable": false },
            { "data": "Regional", "orderable": false },
            { "data": "CreatedBy", "orderable": false },
            {
                "data": "CreatedDate", "orderable": false, "render": function (datum, type, record) {
                    return (datum) ? moment(datum).format("DD-MMM-YYYY") : "";
                }
            },
            { "data": "ModifiedBy", "orderable": false },
            {
                "data": "ModifiedDate", "orderable": false, "render": function (datum, type, record) {
                    return (datum) ? moment(datum).format("DD-MMM-YYYY") : "";
                }
            }
        ];

        return columns;
    }

    function setupDataTables() {
        var actionHtml = '';
        var table = null;

        if ($.fn.dataTable.isDataTable('#tbFleet')) {
            table = $('#tbFleet').DataTable();
            table.destroy();
        }

        var WriteAccess = @Model.WriteAccess;
        var ReadAccess = @Model.ReadAccess;

        table = $('#tbFleet').DataTable({
            "sDom": 'lf<"table-overflow"t>pi',
            "sPaginationType": "full_numbers",
            "language": {
                "zeroRecords": "No records found",
                "infoFiltered": "(filtered from _MAX_ total records)"
            },
            "rowCallback": function(row, data, index) {
                actionHtml = '';

                if (WriteAccess == true) {
                    actionHtml = "<a href='MstFleet/Edit?MstFleetId="+data.MstFleetId+"' data-toggle='tooltip' data-placement='top' title='Edit' class='action'><img src='Content/images/pin.png' alt='' /></a>";
                }
                if (ReadAccess == true) {
                    actionHtml = actionHtml + "<a href='MstFleet/Detail?MstFleetId="+data.MstFleetId +"' data-toggle='tooltip' data-placement='top' title='Detail' class='action'><img src='Content/images/search.png' alt='' /></a>";
                }

                var actionRow = $(row).find("td")[0];

                $(actionRow).addClass('action');
                $(actionRow).html(actionHtml);
            },
            "serverSide": true,
            //"processing": true,
            "paging": true,
            "deferRender": true,
            "columns": setupColumns(),
            "ajax": {
                "url": "@Url.Action("SearchFleetAjax", "MstFleet")",
                "type": "POST",
                "data": function(d) {
                    return $.extend({}, d, {
                        "PoliceNumber": $('#SearchView_PoliceNumber').val(),
                        "FormalName": $('#SearchView_EmployeeName').val(),
                        "EngineNumber": $('#SearchView_EngineNumber').val(),
                        "EmployeeId": $('#SearchView_EmployeeID').val(),
                        "ChasisNumber": $('#SearchView_ChasisNumber').val(),
                        "StatusSource": $('#SearchView_StatusSource').val(),
                        "SupplyMethod": $('#SearchView_SupplyMethod').val(),
                        "BodyType": $('#SearchView_BodyType').val(),
                        "VehicleType": $('#SearchView_VehicleType').val(),
                        "VehicleUsage": $('#SearchView_VehicleUsage').val(),
                        "Vendor": $('#SearchView_Vendor').val(),
                        "Function": $('#SearchView_Function').val(),
                        "StartRent": $('#SearchView_StartRent').val(),
                        "StartRentTo": $('#SearchView_StartRentTo').val(),
                        "EndRent": $('#SearchView_EndRent').val(),
                        "EndRentTo": $('#SearchView_EndRentTo').val(),
                        "EndDate": $('#SearchView_EndDate').val(),
                        "EndDateTo": $('#SearchView_EndDateTo').val(),
                        "Regional": $('#SearchView_Regional').val(),
                        "City": $('#SearchView_City').val()
                    });
                }
            }
        });

        table.on('preXhr', function(e, settings, data) {
            $(".loading").show();
        });

        table.on('xhr', function(e, settings, data) {
            $(".loading").hide();
        });
    }
</script>
