@using FMS.Core;
@model FMS.Website.Models.EmployeeModel
<!-- Main content -->
<div class="opt-content clearfloat">
    <h5 class="title-page">Master Data Employee</h5>
    @if (Model.CurrentPageAccess.UploadAccess == true)
    {
        <a href="@Url.Action("Upload", "MstEmployee")" class="btn btn-primary line" title="Upload & View" ng-click="uploadCom()">
            <i class="fa fa-download"></i> Import
        </a>
    }
    <a href="#!" class="btn btn-primary line" id="btnExport" title="Export To Excel" onclick="ExportXls()">
        <i class="fa fa-upload"></i> Export
    </a>
    @if (Model.CurrentPageAccess.WriteAccess == true)
    {
        <a href="@Url.Action("Create", "MstEmployee")" class="btn btn-primary line" title="Create">
            <i class="fa fa-download"></i> New
        </a>
    }
</div>
<section class="content">
    @using (Html.BeginForm("ExportMasterEmployee", "MstEmployee", FormMethod.Post, new { @id = "ExportToXls" }))
    {
    }
    <div class="wpanel">
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <label>Status</label>
                    @Html.DropDownListFor(model => model.SearchView.Status, Model.SearchView.StatusList, "All", new { @class = "form-control", @data_live_search = true })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label>Employee Id</label>
                    @Html.TextBoxFor(model => model.SearchView.EmployeeId, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label>Formal Name</label>
                    @Html.TextBoxFor(model => model.SearchView.FormalName, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label>Position Title</label>
                    @Html.TextBoxFor(model => model.SearchView.PositionTitle, new { @class = "form-control" })
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="col-md-3">
                <div class="form-group">
                    <label>Division</label>
                    @Html.TextBoxFor(model => model.SearchView.Division, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label>Directorate</label>
                    @Html.TextBoxFor(model => model.SearchView.Directorate, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label>Address</label>
                    @Html.TextBoxFor(model => model.SearchView.Address, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label>City</label>
                    @Html.TextBoxFor(model => model.SearchView.City, new { @class = "form-control" })
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="col-md-3">
                <div class="form-group">
                    <label>Base Town</label>
                    @Html.TextBoxFor(model => model.SearchView.BaseTown, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label>Company</label>
                    @Html.TextBoxFor(model => model.SearchView.Company, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label>Cost Center</label>
                    @Html.TextBoxFor(model => model.SearchView.CostCenter, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label>Group Level</label>
                    @Html.TextBoxFor(model => model.SearchView.GroupLevel, new { @class = "form-control" })
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="col-md-3">
                <div class="form-group">
                    <label>Email Address</label>
                    @Html.TextBoxFor(model => model.SearchView.EmailAddress, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label>Flex Point</label>
                    @Html.TextBoxFor(model => model.SearchView.FlexPoint, new { @class = "form-control" })
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="col-md-12">
                <button id="btn-filter" type="button" class="btn btn-primary">Filter</button>
                <button id="btn-reset" type="button" class="btn btn-default">Reset</button>
            </div>
        </div>
    </div>

    <div class="wpanel">
        <input type="hidden" id="returnTotalData" value="@Model.TotalData" />
        <input type="hidden" id="returnTotalPerPage" value="@Model.TotalDataPerPage" />
        <input type="hidden" id="returnCurrentPage" value="@Model.CurrentPage" />
        <table id="tbEmployee" class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>Action</th>
                    <th>Employee ID</th>
                    <th>Formal Name</th>
                    <th>Position Title</th>
                    <th>Division</th>
                    <th>Directorate</th>
                    <th>Address</th>
                    <th>City</th>
                    <th>Basetown</th>
                    <th>Company</th>
                    <th>Cost Center</th>
                    <th>Group Level</th>
                    <th>Email Address</th>
                    <th>Flex Point</th>
                    <th>Status</th>
                </tr>
            </thead>
        </table>
    </div>
</section>

<script type="text/javascript">

    $(document).ready(function () {
        
        setupDataTables();

        $(document).on('click', '#btn-filter', function () {
            var table = $('#tbEmployee').DataTable();

            table.ajax.reload();
        });

        $(document).on('click', '#btn-reset', function () {
            $('input[type=text]').val('');
            $("select").val('');
            $("select").selectpicker("refresh");
            setupDataTables();
        });

        $('aside').animate({
            scrollTop: $("#MstEmployee").offset().top
        }, 1000);
    });

    function ExportXls() {
        $('#ExportToXls').submit();
    }

    function ReloadDataTables() {
        $('.toggle-row').click(function() {
            var filter = $(".filters");
            filter.slideToggle(100).promise().done(function() {

            });
        });
        setupDataTables();
        $('.loading').hide();
    }

    function setupColumns() {
        var columns = [
            { "data": null, "orderable" : false },
            { "data": "EMPLOYEE_ID", "orderable": true },
            { "data": "FORMAL_NAME", "orderable": true },
            { "data": "POSITION_TITLE", "orderable": true },
            { "data": "DIVISON", "orderable": true },
            { "data": "DIRECTORATE", "orderable": true },
            { "data": "ADDRESS", "orderable": true },
            { "data": "CITY", "orderable": true },
            { "data": "BASETOWN", "orderable": true },
            { "data": "COMPANY", "orderable": true },
            { "data": "COST_CENTER", "orderable": false },
            { "data": "GROUP_LEVEL", "orderable": false },
            { "data": "EMAIL_ADDRESS", "orderable": true },
            { "data": "FLEX_POINT", "orderable": true },
            {
                "data": "IS_ACTIVE", "orderable": false, "render": function (datum, type, record) {
                    return (datum) ? "Active" : "InActive";
                }
            }
        ];
        return columns;
    }

    function setupDataTables(blFirst) {
        // DataTable
        var table = null;
        var actionHtml = '';

        if ($.fn.dataTable.isDataTable('#tbEmployee')) {
            table = $('#tbEmployee').DataTable();
            table.destroy();
        }

        var WriteAccess = @Model.WriteAccess;
        var ReadAccess = @Model.ReadAccess;

        table = $('#tbEmployee').DataTable(
            {
                "sDom": 'lf<"table-overflow"t>pi',
                "sPaginationType": "full_numbers",
                "language": {
                    "zeroRecords": "No records found",
                    "infoFiltered": "(filtered from _MAX_ total records)"
                },
                "rowCallback": function(row, data, index) {
                    actionHtml = '';

                    if (WriteAccess == true) {
                        actionHtml = "<a href='MstEmployee/Edit?EmployeeId="+data.EMPLOYEE_ID+"' data-toggle='tooltip' data-placement='top' title='Edit' class='action'><img src='Content/images/pin.png' alt='' /></a>";
                    }
                    if (ReadAccess == true) {
                        actionHtml = actionHtml + "<a href='MstEmployee/Detail?EmployeeId="+data.EMPLOYEE_ID+"' data-toggle='tooltip' data-placement='top' title='Detail' class='action'><img src='Content/images/search.png' alt='' /></a>";
                    }
                    var actionRow = $(row).find("td")[0];
                    $(actionRow).addClass('action');
                    $(actionRow).html(actionHtml);
                },
                "serverSide": true,
                //"processing": true,
                "paging": true,
                "deferRender": true,
                "columns": setupColumns(),

                "ajax": {
                    "url": "@Url.Action("SearchEmployeeAjax", "MstEmployee")",
                "type": "POST",
                "data": function(d) {
                    return $.extend({}, d, {
                        "StatusSource": $("#SearchView_Status").val(),
                        "EmployeeId": $("#SearchView_EmployeeId").val(),
                        "FormalName": $("#SearchView_FormalName").val(),
                        "PositionTitle": $("#SearchView_PositionTitle").val(),
                        "Division": $("#SearchView_Division").val(),
                        "Directorate": $("#SearchView_Directorate").val(),
                        "Address": $("#SearchView_Address").val(),
                        "City": $("#SearchView_City").val(),
                        "BaseTown": $("#SearchView_BaseTown").val(),
                        "Company": $("#SearchView_Company").val(),
                        "CostCenter": $("#SearchView_CostCenter").val(),
                        "GroupLevel": $("#SearchView_GroupLevel").val(),
                        "EmailAddress": $("#SearchView_EmailAddress").val(),
                        "FlexPoint": $("#SearchView_FlexPoint").val()
                    });
                }
            }
        });
        table.on('preXhr', function(e, settings, data) {
            $(".loading").show();
        });
        table.on('xhr', function(e, settings, data) {
            $(".loading").hide();
        });
    }

    function ReloadDataTables1() {
        setupDataTables(false);
        setpaginglink();
    }

    function setpaginglink() {

    }
</script>
