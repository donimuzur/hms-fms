@model FMS.Website.Models.CostObModel 
@using FMS.Core;

<div class="opt-content clearfloat">
    <h5 class="title-page">Master Data Cost OB Upload</h5>
</div>
<section class="content" ng-controller="MSTCCtrl" ng-init="init()">
    <div class="wpanel">
        <label class="label-warning">@Model.ErrorMessage</label>
        @using (Html.BeginForm("Upload", "MstCostOb", FormMethod.Post, new { enctype = "multipart/form-data"}))
        {
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="input-group">
                            <input type="file" id="upload" name="Model.upload" class="form-control rounded-0 rounded-left" />
                            <span class="input-group-btn">
                                <button type="button" id="btnupload" value="upload" name="upload" class="btn btn-primary rounded-0 rounded-right">Generate</button>
                            </span>
                        </div>
                        <div>
                            Download template <a href="~/files_upload/masterCostOB.xlsx">here</a>
                        </div>
                    </div>
                </div>
            </div>
            <table id="example2" class="table table-bordered dataTables table-striped">
                <thead>
                    <tr>
                        <th>No</th>
                        <th>Year</th>
                        <th>Month</th>
                        <th>Body Type</th>
                        <th>Cost Center</th>
                        <th>function Name</th>
                        <th>Regional</th>
                        <th>Vehicle Type</th>
                        <th>Type</th>
                        <th>Qty</th>
                        <th>Cost</th>
                        <th>Message</th>
                    </tr>
                </thead>
                <tbody id="tb-upload-excel"></tbody>
            </table>
            <div class="row mt-2">
                <div class="col-md-12">
                    <button class="btn btn-primary" type="submit" id="btnSave">Save</button>
                    <a href="@Url.Action("Index","MstCostOb")" title="Cancel" class="btn">Cancel</a>
                </div>
            </div>
        }
    </div>
</section>
<div id="LoadingModal" class="modal" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body" >
                <div align="center">
                    <img src="~/Content/img/loader2.gif" id="imgLoader" style="display:block" />
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/thousand-separator.js"></script>
<script type="text/javascript">

    $(function () {
        // DataTable
        var table = $('#example2').DataTable({
            "sDom": 'lf<"table-overflow"t>pi',
            "paging": false,
            "lengthChange": false,
            "searching": false,
            "info": false,
            "bInfo": false,
            "ordering": false
        });
    });
    $('#btnSave').prop('disabled', true);

    function createColumn(text) {
        return '<td>' + text + '</td>';
    }
    var uploaditems = [];

    function createColumnWithHiddenField(text, name) {
        return '<td><input type="hidden" name="' + name + '" value="' + text + '">' + text + '</td>';
    }

    function createColumnWithHiddenFieldDecimal(text, name) {
        return '<td><input type="hidden" name="' + name + '" value="' + text + '"><span class="decimal">' + ThausandSeperator(text) + '</span></td>';
    }
    $('#btnupload').click(function () {
        uploadXmlFile();
    });


    function uploadXmlFile() {
        $('#LoadingModal').show();
        var postUrl = '@Url.Action("UploadFile", "MstCostOb")';
        var fileName = $('[name="Model.upload"]').val().trim();
        var pos = fileName.lastIndexOf('.');
        var extension = (pos <= 0) ? '' : fileName.substring(pos);
        if (extension != '.xlsx' && extension != '.csv') {
            alert('Please browse a correct excel file to upload');
            $('#LoadingModal').hide();
            return false;
        }

        var formData = new FormData();
        var totalFiles = document.getElementById("upload").files.length;

        for (var i = 0; i < totalFiles; i++) {
            var file = document.getElementById("upload").files[i];
            formData.append("upload", file);
        }
        $.ajax({
            type: "POST",
            url: postUrl,
            data: formData,
            dataType: 'html',
            contentType: false,
            processData: false,

            success: function (response) {
                $('#tb-upload-excel').html('');
                uploaditems = JSON.parse(response);
                var error = "";
                
                for (var i = 0; i < (uploaditems.length > 1000 ? 500 : uploaditems.length); i++) {
                    var tr = '<tr>' +
                createColumn(i + 1) +
                createColumnWithHiddenField(uploaditems[i].Year == null ? "" : uploaditems[i].Year, 'Model.Details[' + i + '].Year') +
                createColumnWithHiddenField(SetMonthToString(uploaditems[i].Month == null ? 0 : uploaditems[i].Month), 'Model.Details[' + i + '].MonthS') +
                 '<input type="hidden" name="Model.Details[' + i + '].Month" value=' + uploaditems[i].Month + '>' +
                 createColumnWithHiddenField(uploaditems[i].Models, 'Model.Details[' + i + '].Models') +
                createColumnWithHiddenField(uploaditems[i].CostCenter, 'Model.Details[' + i + '].CostCenter') +
                createColumnWithHiddenField(uploaditems[i].FunctionName, 'Model.Details[' + i + '].FunctionName') +
                createColumnWithHiddenField(uploaditems[i].Regional, 'Model.Details[' + i + '].Regional') +
                createColumnWithHiddenField(uploaditems[i].VehicleType, 'Model.Details[' + i + '].VehicleType') +
                createColumnWithHiddenField(uploaditems[i].Type, 'Model.Details[' + i + '].Type') +
                createColumnWithHiddenField(uploaditems[i].Qty == 0 || uploaditems[i].Qty == null   ? "" : uploaditems[i].Qty, 'Model.Details[' + i + '].Qty') +
                createColumnWithHiddenFieldDecimal(uploaditems[i].ObCost == null || uploaditems[i].ObCost == 0 ? "" : uploaditems[i].ObCost, 'Model.Details[' + i + '].ObCost') +
                createColumnWithHiddenField(uploaditems[i].ErrorMessage == null ? "" : uploaditems[i].ErrorMessage, 'Model.Details[' + i + '].ErrorMessage') +
                '</tr>';
                    $('#tb-upload-excel').append(tr);
                    error += uploaditems[i].ErrorMessage == null ? "" : uploaditems[i].ErrorMessage;
                }
                
                if (error == '') {
                    $('#btnSave').prop('disabled', false);
                }
                else {
                    $('#btnSave').prop('disabled', true);
                }
                $('#LoadingModal').hide();
            },
            error: function () {
                $('#LoadingModal').hide();
            }

        });
    };
    function SetMonthToString(Month)
    {
        if (Month == 0 || Month == "" || Month == null)
        {
            return "Month 0 is not exist";
        }
        else if (Month == 1)
        {
            return "January";
        }
        else if (Month == 2)
        {
            return "February";
        }
        else if (Month == 3)
        {
            return "March";
        }
        else if (Month == 4)
        {
            return "April";
        }
        else if (Month == 5)
        {
            return "May";
        }
        else if (Month == 6)
        {
            return "June";
        }
        else if (Month == 7)
        {
            return "Juli";
        }
        else if (Month == 8)
        {
            return "August";
        }
        else if (Month == 9)
        {
            return "September";
        }
        else if (Month == 10)
        {
            return "Oktober";
        }
        else if (Month == 11)
        {
            return "November";
        }
        else if (Month == 12)
        {
            return "December";
        }
    return "An Error Occurred";
    }
</script>

