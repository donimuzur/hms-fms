@using FMS.Core;
@model FMS.Website.Models.CtfItem

@{
    ViewBag.Title = Model.TitleForm;
}
<div class="opt-content clearfloat">
    <h5 class="title-page">@ViewBag.Title </h5>
    @*@if (Model.CurrentLogin.UserRole == Enums.UserRole.Fleet)
    {
        <a href="@Url.Action("UploadCtf", "TraCtf")" class="btn btn-primary line" title="Upload CTF">
            <i class="fa fa-download"></i> Mass Upload
        </a>
    }*@
</div>
<section class="content">
    <div class="wpanel">
        <label class="label-warning">@Model.ErrorMessage</label>
        @using (Html.BeginForm("Create", "TraCtf", FormMethod.Post, new { @id = "FormCreate" }))
        {
            @Html.AntiForgeryToken()
            <div id="information" class="tab-pane active" role="tabpanel">
                <div class="tab-wrapper">
                    <div aria-multiselectable="true" role="tablist" id="accordion" class="panel-group">
                        <div class="panel panel-default">
                            <div id="headingOne" role="tab" class="panel-heading">
                                <h4 class="panel-title">
                                    <a aria-controls="collapseOne" aria-expanded="true" href="#collapseOne" data-parent="#accordion" data-toggle="collapse">
                                        Information
                                        <i class="fa fa-caret-down"></i>
                                    </a>
                                </h4>
                            </div>
                            <div aria-labelledby="headingOne" role="tabpanel" class="panel-collapse collapse show" id="collapseOne">
                                <div class="panel-body">
                                    <div role="form" class="form-excise">
                                        <div class="row">
                                            <div class="box-tools pull-right" style="margin-top:-50px">
                                                <h4>
                                                    <label for="" class="control-label">Status:</label>
                                                    <label class="control-label">@Html.Raw(Model.DocumentStatus.ToString())</label>
                                                </h4>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="row">
                                                    <div class="col-md-12">
                                                        <h5>CTF Info</h5>
                                                        <hr />
                                                    </div>
                                                    <div class="col-md-12">
                                                        <div class="form-group">
                                                            <label class="control-label">CTF Number</label>
                                                            @Html.HiddenFor(model => model.IsPersonalDashboard)
                                                            @Html.HiddenFor(model => model.WithdCity)
                                                            @Html.HiddenFor(model => model.WithdAddress)
                                                            @Html.HiddenFor(model => model.VehicleLocation)
                                                            
                                                            @Html.HiddenFor(model => model.isSubmit, new { @id = "isSubmit" })
                                                            @Html.TextBoxFor(model => model.DocumentNumber, new { @class = "form-control ", @readonly = "readonly" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12">
                                                        <div class="form-group">
                                                            <label class="control-label">CTF Date</label>
                                                            @Html.TextBoxFor(model => model.CreatedDate, "{0:dd-MMM-yyyy}", new { @class = "form-control ", @readonly = "readonly" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12">
                                                        <div class="form-group">
                                                            <label class="control-label">Coordinator</label>
                                                            @Html.TextBoxFor(model => model.CreatedBy, new { @class = "form-control ", @readonly = "readonly" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12">
                                                        <div class="form-group">
                                                            <label class="control-label">EmployeeID</label>
                                                            @Html.TextBoxFor(model => model.EmployeeId, new { @id = "EmployeeId", @class = "form-control", required = "required" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12">
                                                        <div class="form-group">
                                                            <label class="control-label">Employee Name</label>
                                                            @Html.TextBoxFor(model => model.EmployeeName, new { @class = "form-control ", @readonly = "readonly" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12">
                                                        <div class="form-group">
                                                            <label class="control-label">Cost Center</label>
                                                            @Html.TextBoxFor(model => model.CostCenter, new { @class = "form-control ", @readonly = "readonly" })
                                                        </div>
                                                    </div>
                                                    @if (Model.CurrentLogin.UserRole == Enums.UserRole.HR)
                                                    {
                                                        <div class="col-md-12">
                                                            <div class="form-group">
                                                                <label class="control-label">Group Level</label>
                                                                @Html.TextBoxFor(model => model.GroupLevel, new { @class = "form-control ", @readonly = "readonly" })
                                                            </div>
                                                        </div>
                                                    }
                                                    <div class="col-md-12">
                                                        <div class="form-group">
                                                            <label class="control-label">Reason</label>
                                                            @Html.DropDownListFor(model => model.Reason, Model.ReasonList, "-- Please Select--", new { @class = "form-control", required = "required" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="row">
                                                    <div class="col-md-12">
                                                        <h5>Vehicle Information</h5>
                                                        <hr />
                                                    </div>
                                                    <div class="col-md-12">
                                                        <div class="form-group">
                                                            <label class="control-label">Police Number</label>
                                                            <label class="label-warning" id="PoliceNote"></label>
                                                            @Html.HiddenFor(model => model.VehicleLocation)
                                                            @Html.HiddenFor(model => model.Region)
                                                            @Html.TextBoxFor(model => model.PoliceNumber, new { @id = "PoliceNumber", @class = "form-control", required = "required" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12">
                                                        <div class="form-group">
                                                            <label class="control-label">Vehicle Year</label>
                                                            @Html.TextBoxFor(model => model.VehicleYear, new { @class = "form-control ", @readonly = "readonly" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12">
                                                        <div class="form-group">
                                                            <label class="control-label">Vehicle Type</label>
                                                            @Html.TextBoxFor(model => model.VehicleType, new { @class = "form-control ", @readonly = "readonly", required = "required" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12" id="idVehicleUsage">
                                                        <div class="form-group">
                                                            <label class="control-label">Vehicle Usage</label>
                                                            @Html.TextBoxFor(model => model.VehicleUsage, new { @class = "form-control ", @readonly = "readonly" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12">
                                                        <div class="form-group">
                                                            <label class="control-label">Supply Method</label>
                                                            @Html.TextBoxFor(model => model.SupplyMethod, new { @class = "form-control ", @readonly = "readonly" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12">
                                                        <div class="form-group">
                                                            <label class="control-label">End Rent Date</label>
                                                            @Html.TextBoxFor(model => model.EndRendDate, "{0:dd-MMM-yyyy}", new { @class = "form-control", @readonly = "readonly", @required ="required" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12">
                                                        <div class="form-group">
                                                            <label class="control-label">Effective Date</label>
                                                            <div class="input-group date" id="EffDate">
                                                                @Html.TextBoxFor(model => model.EffectiveDate, "{0:dd-MMM-yyyy}", new { @class = "form-control", required = "required" })
                                                                <span class="input-group-addon btn btn-primary">
                                                                    <i class="fa fa-calendar "></i>
                                                                </span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12" id="idBuyCost" style = "display:none">
                                                        <div class="form-group">
                                                            <label class="control-label">Buy Cost</label>
                                                            @Html.HiddenFor(model => model.BuyCostTotal)
                                                            @Html.TextBoxFor(model => model.BuyCostTotalStr, new { @class = "decimal form-control ", onkeypress = "return IsAngka(event)" })
                                                        </div>
                                                    </div>
                                                    <div id="idcfmonly" style = "display:none">
                                                        <div class="col-md-12">
                                                            <div class="form-group">
                                                                <label class="control-label">Transfer to CFM Idle</label>
                                                                <div class="form-control">
                                                                    @Html.CheckBoxFor(model => model.IsTransferToIdle, new { @id = "ChkIsTransferToIdle", onclick = "CheckIsTransferToIdle()" })
                                                                    @if (Model.IsTransferToIdle == true)
                                                                    {
                                                                        @Html.Label("Yes", new { @id = "lblIsTransferToIdle" })
                                                                    }
                                                                    else
                                                                    {
                                                                        @Html.Label("No", new { @id = "lblIsTransferToIdle" })
                                                                    }
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div id="idExtend">
                                                        @if (Model.CurrentLogin.UserRole == Enums.UserRole.Fleet)
                                                        {
                                                            <div class="col-md-12">
                                                                <div class="form-group">
                                                                    <label class="control-label">Extend Vehicle</label>
                                                                    @Html.DropDownListFor(model => model.ExtendVehicle, Model.ExtendList, "-- Please Select--", new { @class = "form-control", onchange = "onExtendVehicle()" })
                                                                </div>
                                                            </div>
                                                        }
                                                        <div class="col-md-12" style="display:@(Model.ExtendVehicle ? "block":"none" )" id="extButton">
                                                            <div class="form-group">
                                                                <a href="#" class="btn btn-primary" style="float:right;"><i class="glyphicon glyphicon-plus"></i>Extend Vehicle</a>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row col-md-12">
                <a href="#" class="btn btn-primary" onclick="SendCtf(@Model.TraCtfId)" id="btnSend"><i class="glyphicon glyphicon-ok"></i> Send</a>
                <input type="submit" value="Save" class="btn btn-primary" id="btnSubmit"/>
                <a href="@Url.Action("Index", "TraCtf")" class="btn btn-default">Back</a>
            </div>
        }
    </div>
</section>
<div id="extendmodal" class="modal fade in" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog">
        <div class="modal-content">
        @using (Html.BeginForm("CtfExtend", "TraCtf"))
        {
            <div class="modal-header">
                <h4 class="modal-title">Extend Vehicle</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Employee Id</label>
                            @Html.TextBoxFor(model => model.EmployeeId, new { @class = "form-control ", @id = "modalEmployeeId", @readonly = "readonly" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Police Number</label>
                            @Html.TextBoxFor(model => model.PoliceNumber, new { @class = "form-control ", @id = "modalPoliceNumber", @readonly = "readonly" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">End Rent Date</label>
                            @Html.TextBoxFor(model => model.EndRendDate, "{0:dd-MMM-yyyy}", new { @class = "form-control", @id = "modalEndRent", @readonly = "readonly" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">New Proposed Date</label>
                            <div class="input-group date" id="extDate">
                                @Html.TextBoxFor(model => model.CtfExtend.NewProposedDate, "{0:dd-MMM-yyyy}", new { @class = "form-control", @id = "modalDate" })
                                <span class="input-group-addon btn btn-primary">
                                    <i class="fa fa-calendar"></i>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Extend Police Number</label>
                            @Html.TextBoxFor(model => model.CtfExtend.ExtendPoliceNumber, new { @class = "form-control ", @id = "modalExtPoliceNumber" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Extend PO Number</label>
                            @Html.TextBoxFor(model => model.CtfExtend.ExtendPoNumber, new { @class = "form-control ", @id = "modalPoNumber" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Extend PO Line</label>
                            @Html.TextBoxFor(model => model.CtfExtend.ExtedPoLine, new { @class = "form-control", @id = "modalPoLine" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Extend Price</label>
                            @Html.HiddenFor(model => model.CtfExtend.ExtendPrice)
                            @Html.TextBoxFor(model => model.CtfExtend.ExtendPriceStr, new { @class = "decimal form-control", @id = "modalPrice", onkeypress = "return IsAngka(event)" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Reason</label>
                            @Html.DropDownListFor(model => model.CtfExtend.Reason, Model.ReasonList, "-- Please Select --", new { @class = "form-control", @id = "modalReason" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <input type="button" class="btn btn-grey" data-dismiss="modal" value="Close" id="btnConfirmClose" />
                <input type="submit" class="btn btn-danger" value="Extend" id="btnConfirmExtend" />
            </div>
        }
        </div>
    </div>
</div>
<div id="sendmodal" class="modal fade in" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Send document ?</h4>
            </div>
            <div class="modal-footer">
                <input type="hidden" name="TraCtfId" id="TraCtfIdSend">
                <input type="button" class="btn btn-grey" data-dismiss="modal" value="Close" />
                <input type="submit" class="btn btn-danger" value="OK" id="btnConfirmSend" />
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/ctfscript.js"></script>
<script src="~/Scripts/thousand-separator.js"></script>
<script type="text/javascript">

    $('#BuyCostTotalStr').val(ThausandSeperator($('#BuyCostTotalStr').val(), 2));
    $('#EmployeeContributionStr').val(ThausandSeperator($('#EmployeeContributionStr').val(), 2));
    $('#PenaltyStr').val(ThausandSeperator($('#PenaltyStr').val(), 2));
    $('#modalPrice').val(ThausandSeperator($('#modalPrice').val(), 2));

    function IsAngka(evt) {
        var charCode = (evt.which);
        if (charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        return true;
    }
  

    $(document).ready()
    {
        InitEmployee('@Url.Action("GetEmployeeList","TraCtf")', '@Url.Action("GetEmployee","TraCtf")');
        InitPoliceNumber('@Url.Action("GetPoliceNumberList", "TraCtf")', '@Url.Action("GetVehicle", "TraCtf")');
        checkVehicletype();
        checkVehicleusage();

    }

    $('#EffDate').on('dp.change', function (e) {
        var todayDate = new Date();
        var effDateStr = $("#EffectiveDate").val().split("-");
        var months = ["jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec"];
        var month = months.indexOf(effDateStr[1].toLowerCase());
        var effDate = new Date(parseInt(effDateStr[2]), month, parseInt(effDateStr[0]));
        todayDate = todayDate.setHours(00, 00, 00, 00);
        if (effDateStr == '') effDate = todayDate;
        if (effDate < todayDate)
        {
            alert('Effective Date must bigger or equal wih today')
            $("#EffectiveDate").val('');
            return false;
        }
        var endDateStr = $("#EndRendDate").val().split("-");
        var months = ["jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec"];
        var month = months.indexOf(endDateStr[1].toLowerCase());
        var endDate = new Date(parseInt(endDateStr[2]), month, parseInt(endDateStr[0]));
        if (effDate > endDate)
        {
            alert('Effective Date cannot bigger than End Rent Date ')
            $("#EffectiveDate").val('');
            return false;
        }
        return true;
    });

    $('#extDate').on('dp.change', function (e) {
        
        var extDateStr = $("#modalDate").val().split("-");
       
        var months = ["jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec"];
        var month = months.indexOf(extDateStr[1].toLowerCase());
        var extDate = new Date(parseInt(extDateStr[2]), month, parseInt(extDateStr[0]));
        extDate = extDate.setHours(00, 00, 00, 00);

        var endDateStr = $("#modalEndRent").val().split("-");
        var months = ["jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec"];
        var month = months.indexOf(endDateStr[1].toLowerCase());
        var endDate = new Date(parseInt(endDateStr[2]), month, parseInt(endDateStr[0]));
        
        if (endDateStr == '' ) extDate = endDate;
        if (extDate < endDate) {
            alert('New Proposed Date  cannot less than End Rent Date ')
            $("#modalDate").val('');
            return false;
        }
        return true;
    });

    function InitPoliceNumber(url, urlsearch) {
        var options = {
            url: url,
            getValue: "PoliceNumber",

            template: {
                type: "description",
                fields: {
                    description: "VehicleType"
                }
            },
            list: {
                match: {
                    enabled: true
                },
                sort: {
                    enabled: true
                },
                onChooseEvent: function () {
                    GetVehicle();
                }
            }
        };
        $("#PoliceNumber").easyAutocomplete(options);
    }
    function InitEmployee(url, urlsearch) {
        var options = {
            url: url,
            getValue: "EMPLOYEE_ID",

            template: {
                type: "description",
                fields: {
                    description: "FORMAL_NAME"
                }
            },
            list: {
                match: {
                    enabled: true
                },
                sort: {
                    enabled: true
                },
                onChooseEvent: function () {
                    GetEmployee();
                }
            }
        };
        $("#EmployeeId").easyAutocomplete(options);
    }
    function CheckEndrent(reason)
    {
        var reasonval = $("#Reason").val();
        
        if(reason == 'end rent')
        {
            $('#idcfmonly').hide();
            $('#idExtend').hide();
            var EndRent = $('#EndRendDate').val()
            document.getElementById("EffectiveDate").value = EndRent;
            $('#EffectiveDate').prop('readonly', true);
        }
        else if (reasonval == '')
        {
            $('#idExtend').show();
            $('#ExtendVehicle').prop('disabled', false);
            $('#idExtend').prop('disabled', false);
            onExtendVehicle();

        }
        else
        {
            checkVehicletype();
            checkVehicleusage();
            $('#idExtend').prop('disabled', true);
            $('#ExtendVehicle').prop('disabled', true);
            $('#EffectiveDate').prop('readonly', false);
            $('#ExtendVehicle').prop('selectedIndex', 1);
            onExtendVehicle();
        }
    }
    $("#Reason").change(function () {
        var data = $('#Reason').find("option:selected").text().toLowerCase()
        CheckEndrent(data);
    });
    function checkVehicletype() {
        var data = $('#VehicleType').val().toLowerCase();
        if (data == 'wtc') {
            $('#idBuyCost').hide();
            $('#idVehicleUsage').hide();
            $('#BuyCostTotalStr').prop('required', false);
            $('#idExtend').show();
            $('#idcfmonly').hide();
        }
    }
    function checkVehicleusage()
    {
        var data = $('#VehicleUsage').val().toLowerCase();
        if (data == 'cfm' || data=='cfm idle')
        {
            $('#idcfmonly').show();
            $('#idExtend').show();

            $('#idBuyCost').hide();
            $('#BuyCostTotalStr').prop('required', false);
            $('#btnSend').show();
        }
        else if(data == 'cop')
        {
            $('#idBuyCost').show();
            $('#btnSend').hide();
            $('#BuyCostTotalStr').prop('required', true);

            $('#idcfmonly').hide();
            $('#idExtend').hide();
        }
    }
    function jsonDateToDatetime(str) {
        try {
            var dt = new Date(parseInt(str.substr(6)));
            var dtStr = dt.toString();
            var date = dtStr.substr(8, 2) + " " + (dtStr.substr(4, 3)) + " " + dtStr.substr(11, 4);
            var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
            var str = dt.getDate() + '-' + (months[dt.getMonth()]) + '-' + dt.getFullYear();
        } catch (e) {
            return '';
        }

        return str;
    }
    function GetEmployee() {
        var Id = document.getElementById("EmployeeId").value;
        $.ajax({
            url: '@Url.Action("GetEmployee", "TraCtf")',
            type: "POST",
            dataType: "JSON",
            data: { Id:Id },
            success: function (response) {
                document.getElementById("EmployeeName").value = response.EmployeeName;
                document.getElementById("CostCenter").value = response.CostCenter;
                document.getElementById("GroupLevel").value = response.GroupLevel;
                if (response.PoliceNumber != null) {
                    document.getElementById("PoliceNumber").value = response.PoliceNumber;
                    document.getElementById("VehicleYear").value = response.VehicleYear;
                    document.getElementById("VehicleType").value = response.VehicleType;
                    document.getElementById("VehicleUsage").value = response.VehicleUsage;
                    document.getElementById("VehicleLocation").value = response.VehicleLocation;
                    if (response.VehicleType == 'WTC')
                    {
                        document.getElementById("CostCenter").value = response.CostCenterFleet;
                    }
                    document.getElementById("SupplyMethod").value = response.SupplyMethod;
                    
                    var str = jsonDateToDatetime(response.EndRendDate)
                    document.getElementById("EndRendDate").value = str;
                }
                else
                {
                    document.getElementById("PoliceNumber").value = '';
                    document.getElementById("VehicleYear").value = '';
                    document.getElementById("VehicleType").value = '';
                    document.getElementById("VehicleUsage").value = '';
                    document.getElementById("SupplyMethod").value = '';
                    document.getElementById("EndRendDate").value = '';
                }
            },
            complete: function (data) {
                GetReasonList();
                checkVehicletype();
                checkVehicleusage();
                var data = $('#Reason').find("option:selected").text().toLowerCase()
                CheckEndrent(data);
            }
        });
    }
    function GetVehicle() {
        var Id = document.getElementById("PoliceNumber").value;
        $.ajax({
            url: '@Url.Action("GetVehicle", "TraCtf")',
            type: "POST",
            dataType: "JSON",
            data: { Id: Id },
            success: function (response) {
                document.getElementById("VehicleYear").value = response.VehicleYear;
                document.getElementById("VehicleType").value = response.VehicleType;
                document.getElementById("VehicleUsage").value = response.VehicleUsage;
                document.getElementById("VehicleLocation").value = response.VehicleLocation;
                document.getElementById("SupplyMethod").value = response.SupplyMethod;
                var str = jsonDateToDatetime(response.EndRendDate)
                document.getElementById("EndRendDate").value = str;
                if (response.PoliceNumber != null) {
                    document.getElementById("EmployeeId").value = response.EmployeeId;
                    document.getElementById("EmployeeName").value = response.EmployeeName;
                    document.getElementById("CostCenter").value = response.CostCenter;
                    if (response.VehicleType.toLowerCase() == 'benefit')
                    {
                        document.getElementById("GroupLevel").value = response.GroupLevel;
                    }
                }
                else
                {
                    document.getElementById("EmployeeId").value = '';
                    document.getElementById("EmployeeName").value = '';
                    document.getElementById("CostCenter").value = '';
                    document.getElementById("GroupLevel").value = '';
                }

                if (response.VehicleType == 'WTC') {
                    document.getElementById("CostCenter").value = response.CostCenterFleet;
                }

            },
            complete: function (data) {
                GetReasonList();
                checkVehicletype();
                checkVehicleusage();
                var data = $('#Reason').find("option:selected").text().toLowerCase()
                CheckEndrent(data);
            }
        });
    }
    function CheckIsTransferToIdle () {
        if (document.getElementById('ChkIsTransferToIdle').checked == true) {
            document.getElementById('lblIsTransferToIdle').innerHTML = "Yes";
        }
        else {
            document.getElementById('lblIsTransferToIdle').innerHTML = "No";
        }
    }
    function onExtendVehicle()
    {
        if($('#ExtendVehicle').val() == 'True')
        {
            document.getElementById('extButton').style.display = 'block';

            var EndRent = $('#EndRendDate').val()
            document.getElementById("EffectiveDate").value = EndRent;

            $('#modalExtPoliceNumber').prop('required', true);
            $('#modalPoNumber').prop('required', true);
            $('#modalPoLine').prop('required', true);
            $('#modalReason').prop('required', true);
            $('#modalDate').prop('required', true);
            $('#modalPrice').prop('required', true);
        }
        else if ($('#ExtendVehicle').val() == 'False')
        {
            document.getElementById('extButton').style.display = 'none';
            $('#modalExtPoliceNumber').prop('required', false);
            $('#modalPoNumber').prop('required', false);
            $('#modalPoLine').prop('required', false);
            $('#modalReason').prop('required', false);
            $('#modalDate').prop('required', false);
            $('#modalPrice').prop('required', false);
        }
    }

    $('#extButton').click(function ()
    {
        $('#modalEmployeeId').val($('#EmployeeId').val());
        $('#modalPoliceNumber').val($('#PoliceNumber').val());
        $('#modalEndRent').val($('#EndRendDate').val());
        $('#modalDate').val($('#EndRendDate').val());
        $('#extendmodal').modal('show');
    });
    function ajaxSelectPoliceNumber() {
        if ($("#EmployeeId").length) {
            var Id = $('#EmployeeId').find("option:selected").val();
            $('#PoliceNumber option').remove();
            $('#VehicleYear').val('')
            $('#VehicleType').val('')
            $('#VehicleUsage').val('')
            $('#SupplyMethod').val('')
            $('#EndRendDate').val('')
            $('#PoliceNote').html('')
            if (Id == '' || $('#EmployeeId').find("option:selected").val() == '') {
                $('#PoliceNumber option').append('<option value="">Select</option>');

            }
            else {
                 $.ajax({
                        url: '@Url.Action("GetPoliceNumberList", "TraCtf")',
                        type: "POST",
                        dataType: "JSON",
                        data: { Id: Id , Type : "benefit"},
                        success: function (list) {
                        $('#PoliceNumber').append('<option value="">Select</option>');
                        if (list.length > 0) {
                            for (var i = 0; i < list.length; i++) {
                                $('#PoliceNumber').append('<option value=' + list[i].PoliceNumber + '>' + list[i].PoliceNumber + '</option>');
                            }
                        }
                        else
                        {
                            $('#VehicleYear').val('')
                            $('#VehicleType').val('')
                            $('#VehicleUsage').val('')
                            $('#SupplyMethod').val('')
                            $('#EndRendDate').val('')
                            $('#PoliceNote').html(' -- This Employee doesnt have a police number')
                        }

                    }
                });
            }
        }
    }

    function SendCtf(value) {
        $('#TraCtfIdSend').val(value);
        $('#sendmodal').modal('show');
    }
    function Confirm() {
        $('#isSubmit').val('submit');
        $("#btnSubmit").trigger('click');
    }
    $("#btnConfirmSend").click(function () {
        $('#isSubmit').val('submit');
        $("#btnSubmit").trigger('click');
    });

    function GetReasonList() {
        if ($("#VehicleType").length) {
            var VehicleType = $('#VehicleType').val();
            $('#Reason option').remove();
            if (VehicleType == '' || $('#VehicleType').find("option:selected").val() == '') {
                $('#Reason').append('<option value="">-- Please Select --</option>');

            }
            else {
                $.ajax({
                    url: '@Url.Action("GetReasonByVehicleType", "TraCtf")',
                    type: "POST",
                    dataType: "JSON",
                    data: { VehicleType: VehicleType },
                    success: function (list) {
                        $('#Reason').append('<option value="">-- Please Select --</option>');
                        if (list.length > 0) {
                            for (var i = 0; i < list.length; i++) {
                                $('#Reason').append('<option value=' + list[i].MstReasonId + '>' + list[i].Reason + '</option>');
                            }
                        }
                    }
                });
            }
        }
    }

</script>
