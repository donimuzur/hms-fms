use [FMS];

Create procedure dbo.GetEpafCSF
AS BEGIN

	MERGE MST_EPAF AS Target
	USING (select ACTION_TYPE, EMPLID, NAME_FORMAL, CC, EFFDATE, GROUP_LEVEL, EXPAT, LETTER_SEND, CITY, BASETOWN
	FROM View_EPAF_CSF) AS Source
	ON (Source.ACTION_TYPE = Target.EPAF_ACTION OR (Source.ACTION_TYPE IS NULL AND Target.EPAF_ACTION IS NULL))
	AND (Source.CC = Target.COST_CENTER OR (Source.CC IS NULL AND Target.COST_CENTER IS NULL))
	AND (Source.EFFDATE = Target.EFFECTIVE_DATE OR (Source.EFFDATE IS NULL AND Target.EFFECTIVE_DATE IS NULL))
	AND (Source.GROUP_LEVEL = Target.GROUP_LEVEL OR (Source.GROUP_LEVEL IS NULL AND Target.GROUP_LEVEL IS NULL))
	AND (IIF(Source.EXPAT = 'YES', 1, 0) = Target.EXPAT OR (Source.EXPAT IS NULL AND Target.EXPAT IS NULL))
	AND (IIF(Source.LETTER_SEND = 'YES', 1, 0) = Target.LETTER_SEND OR (Source.LETTER_SEND IS NULL AND Target.LETTER_SEND IS NULL))
	AND (Source.CITY = Target.CITY OR (Source.CITY IS NULL AND Target.CITY IS NULL))
	AND (Source.BASETOWN = Target.BASE_TOWN OR (Source.BASETOWN IS NULL AND Target.BASE_TOWN IS NULL))
	AND (Target.DOCUMENT_TYPE = 1)
	WHEN NOT MATCHED BY TARGET THEN
		INSERT (DOCUMENT_TYPE, EPAF_ACTION, EMPLOYEE_ID, EMPLOYEE_NAME, COST_CENTER,
		EFFECTIVE_DATE, GROUP_LEVEL, EXPAT, LETTER_SEND,
		CITY, BASE_TOWN, CREATED_BY, CREATED_DATE, IS_ACTIVE)
		VALUES( 1, Source.ACTION_TYPE, Source.EMPLID, Source.NAME_FORMAL, Source.CC, 
		Source.EFFDATE, Source.GROUP_LEVEL, IIF(Source.EXPAT = 'YES', 1, 0), IIF(Source.LETTER_SEND = 'YES', 1, 0), 
		Source.CITY, Source.BASETOWN, 'SYSTEM', GETDATE(), 1);

END